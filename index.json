[{"authors":["admin"],"categories":null,"content":"I am a fourth-year undergraduate student at Stanford University, majoring Mathematical and Computational Science. I am broadly interested in applications of data science to human-centered problems, which has led me to research positions involving software development and statistical analysis in the Stanford Brain Interfacing Lab, the Stanford Cardiovascular Biomechanics Computation Lab, and most recently the Stanford Computational Policy Lab. Following my graduation in June 2019, I will continue exploring similar research as I pursue my Ph.D. In my free time, you might find me reading or writing fiction and non-fiction, preferably on a beach in my native Australia.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"I am a fourth-year undergraduate student at Stanford University, majoring Mathematical and Computational Science. I am broadly interested in applications of data science to human-centered problems, which has led me to research positions involving software development and statistical analysis in the Stanford Brain Interfacing Lab, the Stanford Cardiovascular Biomechanics Computation Lab, and most recently the Stanford Computational Policy Lab. Following my graduation in June 2019, I will continue exploring similar research as I pursue my Ph.","tags":null,"title":"Samantha Robertson","type":"author"},{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536476400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536476400,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00-07:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":[],"content":" This month I decided to take part in the Storytelling With Data monthly challenge for the first time! The dataset we were given to explore contains global aid exchanges between 47 countries across the world across the years 1973-2013. The goal is to create visualizations that answers the broad question: Who Donates?, as well as some bonus questions about distribution of donations geographically, temporally and by purpose of donation. Here’s my initial attempt! Along with some code. (The only package I use here is tidyverse).\nThe Data The data provided is nice and clean, so all we are left to do is read it in using read_csv(). I changed some variable names to make it nicer to work with, and noticed that there are a few negative quantities of money in the data, which I drop since they are impossible. Here’s a glimpse of what the data looks like:\n  id year donor recipient amount purpose_code purpose_desc    2414478 1977 Saudi Arabia India 348718518 23030 Power generation/renewable sources  2414509 1977 Saudi Arabia Brazil 191647004 23040 Electrical transmission/ distribution  2414635 1983 Saudi Arabia India 79371799 21030 Rail transport  2414665 1984 Saudi Arabia Taiwan 212202942 21030 Rail transport  2414667 1984 Saudi Arabia Korea 134511154 21040 Water transport  2414684 1985 Saudi Arabia India 128074768 23000 Energy generation and supply, combinations of activities     Who Donates? One of the challenges in answering this question is how to summarize across time. I chose to look at the proportion of the total money contributed to global aid that each country contributed and received.\ndonated \u0026lt;- data %\u0026gt;% group_by(donor) %\u0026gt;% summarise(donated = sum(amount)) %\u0026gt;% mutate(prop_donated = donated / sum(donated)) %\u0026gt;% select(country = donor, prop_donated) received \u0026lt;- data %\u0026gt;% group_by(recipient) %\u0026gt;% summarise(received = sum(amount)) %\u0026gt;% mutate(prop_received = received / sum(received)) %\u0026gt;% select(country = recipient, prop_received) aid \u0026lt;- donated %\u0026gt;% full_join(received, by = c(\u0026quot;country\u0026quot;)) %\u0026gt;% mutate_at(vars(-country), ~if_else(is.na(.), 0, .)) %\u0026gt;% gather(-country, key = direction, value = proportion_of_aid) %\u0026gt;% mutate(direction = str_extract(direction, \u0026quot;[^_]+$\u0026quot;)) country_order \u0026lt;- aid %\u0026gt;% spread(direction, proportion_of_aid) %\u0026gt;% mutate(diff = donated - received) %\u0026gt;% arrange(diff) %\u0026gt;% pull(country) aid \u0026lt;- aid %\u0026gt;% mutate(country = factor(country, levels = country_order, ordered = TRUE)) segments \u0026lt;- aid %\u0026gt;% spread(direction, proportion_of_aid) aid %\u0026gt;% ggplot(aes(y = country)) + geom_segment( aes(yend = country, x = donated, xend = received), color = \u0026quot;grey40\u0026quot;, data = segments ) + geom_point(aes(x = proportion_of_aid, color = direction), size = 2) + scale_y_discrete(expand = expand_scale(0)) + scale_x_sqrt( labels = scales::percent, expand = expand_scale(0), limits = c(0,0.4), breaks = c(0, 0.01, 0.025, 0.05, 0.1, 0.2, 0.3, 0.4) ) + scale_color_brewer(type = \u0026quot;qual\u0026quot;, palette = \u0026quot;Set1\u0026quot;, labels = str_to_title) + theme_minimal() + theme(legend.position = \u0026quot;top\u0026quot;) + coord_cartesian(clip = \u0026quot;off\u0026quot;) + labs( y = NULL, x = glue::glue(\u0026quot;Percentage of Total Aid {min(pull(data, year))} - {max(pull(data, year))}\u0026quot;), color = NULL, title = \u0026quot;The United States and Japan are the world\u0026#39;s major donors\u0026quot;, subtitle = \u0026quot;India has received almost 40% of all global aid\u0026quot; ) Excuse the squished y-axis. I played around with it for a while and eventually gave up. Any hints are very welcome!\n Has the Amount Donated Changed Over Time? In keeping with the same metric, proportion of aid contributed and received, we can also look at the trends over time. I’ve highlighted the top three donors and recipients in the figure. Interestingly, it seems that receiving tends to be steadier over time, while donations see more anomalous spikes\ndonated \u0026lt;- data %\u0026gt;% group_by(donor, year) %\u0026gt;% summarise(donated = sum(amount)) %\u0026gt;% ungroup() %\u0026gt;% mutate(prop_donated = donated / sum(donated)) %\u0026gt;% select(country = donor, year, prop_donated) received \u0026lt;- data %\u0026gt;% group_by(recipient, year) %\u0026gt;% summarise(received = sum(amount)) %\u0026gt;% ungroup() %\u0026gt;% mutate(prop_received = received / sum(received)) %\u0026gt;% select(country = recipient, year, prop_received) timeseries \u0026lt;- donated %\u0026gt;% full_join(received, by = c(\u0026quot;country\u0026quot;, \u0026quot;year\u0026quot;)) %\u0026gt;% mutate_at(vars(prop_donated, prop_received), ~if_else(is.na(.), 0, .)) %\u0026gt;% gather(prop_donated, prop_received, key = direction, value = proportion) %\u0026gt;% mutate( proportion = if_else(direction == \u0026quot;prop_donated\u0026quot;, proportion, -proportion) ) top_3 \u0026lt;- aid %\u0026gt;% filter(direction == \u0026quot;donated\u0026quot;) %\u0026gt;% top_n(3, proportion_of_aid) %\u0026gt;% pull(country) bottom_3 \u0026lt;- aid %\u0026gt;% filter(direction == \u0026quot;received\u0026quot;) %\u0026gt;% top_n(3, proportion_of_aid) %\u0026gt;% pull(country) timeseries_main \u0026lt;- timeseries %\u0026gt;% filter(country %in% top_3 \u0026amp; direction == \u0026quot;prop_donated\u0026quot; | country %in% bottom_3 \u0026amp; direction == \u0026quot;prop_received\u0026quot;) country_order \u0026lt;- timeseries_main %\u0026gt;% filter(year == max(pull(data, year))) %\u0026gt;% arrange(desc(proportion)) %\u0026gt;% pull(country) timeseries_main \u0026lt;- timeseries_main %\u0026gt;% mutate(country = factor(country, levels = country_order, ordered = TRUE)) labeller \u0026lt;- function(y) { y = if_else(y \u0026lt; 0, -y, y) scales::percent(y) } timeseries %\u0026gt;% unite(group, country, direction, remove = FALSE) %\u0026gt;% ggplot(aes(year, proportion)) + geom_line(aes(group = group), alpha = 0.2) + geom_line(aes(color = country), data = timeseries_main) + scale_x_continuous(breaks = seq(1970, 2015, by = 5)) + scale_y_continuous(labels = labeller) + scale_color_brewer(type = \u0026quot;qual\u0026quot;, palette = \u0026quot;Dark2\u0026quot;) + theme_minimal() + labs( x = NULL, color = NULL, y = glue::glue(\u0026quot;Percentage of Annual Aid\u0026quot;), title = \u0026quot;Contributions from significant donors is not constant over time\u0026quot;, subtitle = \u0026quot;Major events like war and recession drive spikes in aid\u0026quot; ) + annotate( geom = \u0026quot;text\u0026quot;, x = 1974, y = 0.0275, label = \u0026quot;Proportion Donated\u0026quot;, hjust = 0 ) + annotate( geom = \u0026quot;text\u0026quot;, x = 1974, y = -0.0175, label = \u0026quot;Proportion Received\u0026quot;, hjust = 0 )  ","date":1552521600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552521600,"objectID":"4aa964349d629f5099e2c2a3c94a0dea","permalink":"/post/2019-03-07-swdchallenge/","publishdate":"2019-03-14T00:00:00Z","relpermalink":"/post/2019-03-07-swdchallenge/","section":"post","summary":"This month I decided to take part in the Storytelling With Data monthly challenge for the first time! The dataset we were given to explore contains global aid exchanges between 47 countries across the world across the years 1973-2013. The goal is to create visualizations that answers the broad question: Who Donates?, as well as some bonus questions about distribution of donations geographically, temporally and by purpose of donation. Here’s my initial attempt!","tags":["R","data-visualization","tidyverse"],"title":"#SWDChallenge March 2019","type":"post"},{"authors":null,"categories":[],"content":"    As my senior year at Stanford nears the end, I’ve started to think more and more about what I’ve really learned here, and what I’ll be taking away from my undergraduate experience. Sure, there’s plenty of sappy stuff about coming of age and figuring out what I want to start doing with my life (spoiler: haven’t figured it out), but what about concrete knowledge I’ve gained from my classes. Being the data nerd that I am, I decided to take a “data-driven” approach to this question, and see what I could find. Here’s the results!\nlibrary(tidyverse) library(googlesheets) library(rvest) library(tidytext) library(wordcloud) library(tm) library(igraph) library(networkD3) FILE.googlesheets \u0026lt;- \u0026quot;~/Desktop/myclasses.Rds\u0026quot; FILE.explorecourses \u0026lt;- \u0026quot;~/Desktop/courses1819raw.Rds\u0026quot; Collating the data First, we need some data! Although I played around with trying to scrape my transcript, it proved not worth the effort with all the Stanford security, so I created a Google Sheets document and manually recorded each class I have taken, including the department code e.g. “CS”, the course code e.g. “106A”, the school e.g. “School of Engineering”, the number of units I took the class for, and the quarter I took the class (recorded as an integer from 1-12).\nThen I was able to use the googlesheets package to pull this data into R with only a few lines of code:\n# Log in to Google gs_auth(new_user = TRUE) # Find the document we want sheet_key \u0026lt;- gs_ls() %\u0026gt;% filter(sheet_title == \u0026quot;courses\u0026quot;) %\u0026gt;% pull(sheet_key) # Read the document df \u0026lt;- gs_key(sheet_key) %\u0026gt;% gs_read() To avoid authentication over and over, I saved the resulting dataframe, and we’ll use the saved version.\nclasses \u0026lt;- read_rds(FILE.googlesheets) head(classes) %\u0026gt;% knitr::kable()   dept code school units quarter    esf 6a Office of Vice Provost for Undergraduate Education 7 1  lawgen 116n Law School 3 1  math 51 School of Humanities \u0026amp; Sciences 5 1  cs 106a School of engineering 5 2  physics 41 School of Humanities \u0026amp; Sciences 4 2  physics 41a School of Humanities \u0026amp; Sciences 1 2    Let’s clean up the formatting a little first. We’ll also add a variable that contains just the numeric part of the course code, in case we want to look at how advanced the coursework is by the course number.\nclasses \u0026lt;- classes %\u0026gt;% mutate( dept = str_to_upper(dept), code = str_to_upper(code), school = str_to_title(school), code_numeric = parse_number(code) ) head(classes) %\u0026gt;% knitr::kable()   dept code school units quarter code_numeric    ESF 6A Office Of Vice Provost For Undergraduate Education 7 1 6  LAWGEN 116N Law School 3 1 116  MATH 51 School Of Humanities \u0026amp; Sciences 5 1 51  CS 106A School Of Engineering 5 2 106  PHYSICS 41 School Of Humanities \u0026amp; Sciences 4 2 41  PHYSICS 41A School Of Humanities \u0026amp; Sciences 1 2 41    Just with this data we can already do some cool analysis. For example, let’s look at the distribution of units over the course of my degree, divided by school…\ntotal_unit_count \u0026lt;- classes %\u0026gt;% group_by(quarter) %\u0026gt;% summarise(total_units = sum(units)) fall_quarters \u0026lt;- tribble( ~quarter, ~label, 1, \u0026quot;2015-2016\u0026quot;, 4, \u0026quot;2016-2017\u0026quot;, 7, \u0026quot;2017-2018\u0026quot;, 10, \u0026quot;2018-2019\u0026quot; ) classes %\u0026gt;% group_by(school, quarter) %\u0026gt;% summarise(total_units = sum(units)) %\u0026gt;% ggplot(aes(quarter, total_units)) + geom_vline(aes(xintercept = quarter), data = fall_quarters, color = \u0026quot;grey90\u0026quot;) + geom_point(aes(group = school, color = school)) + geom_line(aes(group = school, color = school)) + geom_line(data = total_unit_count, color = \u0026quot;grey80\u0026quot;) + geom_text( aes(x = quarter + 0.2, label = label), y = 14, color = \u0026quot;grey40\u0026quot;, angle = 90, data = fall_quarters, hjust = 0 ) + theme( legend.position = \u0026quot;bottom\u0026quot;, legend.direction = \u0026quot;vertical\u0026quot;, axis.ticks.x = element_blank(), axis.text.x = element_blank() ) + labs( x = \u0026quot;Quarter\u0026quot;, y = \u0026quot;Units\u0026quot;, color = NULL, title = \u0026quot;Over Time I\u0026#39;ve started to take more classes in Engineering\\nand fewer in Humanities and Sciences\u0026quot; ) …what about by Department?\nclasses %\u0026gt;% group_by(school, dept) %\u0026gt;% summarise(total_units = sum(units)) %\u0026gt;% ggplot(aes(reorder(dept, total_units), total_units)) + geom_segment(aes(xend = dept, y = 0, yend = total_units), color = \u0026quot;grey60\u0026quot;) + geom_point(aes(color = school), size = 3) + scale_y_continuous(limits = c(0, 42), expand = c(0,0)) + theme_minimal() + theme( legend.position = \u0026quot;bottom\u0026quot;, legend.direction = \u0026quot;vertical\u0026quot; ) + coord_flip() + labs( x = NULL, y = \u0026quot;Total Units\u0026quot;, color = NULL, title = \u0026quot;Computer Science Dominates My Unit Count\u0026quot;, subtitle = \u0026quot;Math, MS\u0026amp;E and Statistics classes are also required of my major\u0026quot; )  Scraping Course Descriptions What I am really curious about, though, is whether we can see any themes in my interests from the course descriptions of the classes I’ve taken, as listed in Explore Courses. I wasn’t about to copy and paste all of these by hand, plus this was a great opportunity to practice web scraping with rvest!\nI scraped ALL of the course descriptions from every page of Explore Courses, so that I can join the descriptions to my dataframe of classes. This took an hour or so to run, but I made sure to save the result!\nexplore_courses \u0026lt;- read_rds(FILE.explorecourses) head(explore_courses) ## # A tibble: 6 x 4 ## num title desc attrs ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 AA 47… Why Go To Space? Why do we spend billion… \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… ## 2 AA 93: Building Trust … Preparatory course for … \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… ## 3 AA 10… Introduction to… This class introduces t… \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… ## 4 AA 10… Introduction to… \u0026quot;This course explores t… \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… ## 5 AA 10… Air and Space P… \u0026quot;This course is designe… \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… ## 6 AA 10… Surviving Space Space is dangerous. Any… \u0026quot;\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t… Clearly, the results are a little messy! For now, though all we want is the description to join to the datafram of my classes, and maybe the title of the classes might be fun too. To join to our dataset we need to split the num variable into department and code. While we’re at it, let’s drop any prerequisites from the desc variable. We don’t care about them for analysing the descriptions.\nexplore_courses \u0026lt;- explore_courses %\u0026gt;% mutate(num = str_extract(num, \u0026quot;^[^:]*\u0026quot;)) %\u0026gt;% separate(num, into = c(\u0026quot;dept\u0026quot;, \u0026quot;code\u0026quot;), sep = \u0026quot; \u0026quot;, extra = \u0026quot;merge\u0026quot;) %\u0026gt;% mutate(dept = str_to_upper(dept), code = str_to_upper(code)) %\u0026gt;% separate( desc, into = c(\u0026quot;desc\u0026quot;), sep = \u0026quot;(Prerequisites:|Prerequisite:|prerequisite:|prerequisites:)\u0026quot;, extra = \u0026quot;drop\u0026quot; ) %\u0026gt;% select(dept, code, title, desc) head(explore_courses, 2) %\u0026gt;% knitr::kable()   dept code title desc    AA 47SI Why Go To Space? Why do we spend billions of dollars exploring space? What can modern policymakers, entrepreneurs, and industrialists do to help us achieve our goals beyond planet Earth? Whether it is the object of exploration, science, civilization, or conquest, few domains have captured the imagination of a species like space. This course is an introduction to space policy issues, with an emphasis on the modern United States. We will present a historical overview of space programs from all around the world, and then spend the last five weeks discussing present policy issues, through lectures and guest speakers from NASA, the Department of Defense, new and legacy space industry companies, and more. Students will present on one issue that piques their interest, selecting from various domains including commercial concerns, military questions, and geopolitical considerations.  AA 93 Building Trust in Autonomy Preparatory course for Bing Overseas Studies summer course in Edinburgh.    That looks better!!\nNow we can join this to classes:\nclasses_with_descriptions \u0026lt;- classes %\u0026gt;% left_join(explore_courses, by = c(\u0026quot;dept\u0026quot;, \u0026quot;code\u0026quot;)) Even in the first few results, there are some NA values resulting from the join. A concern is that the matching of dept and code isn’t working due to a formatting quirk. Sadly, it’s even worse… Explore Courses deletes classes after they haven’t been offered for a while!\nclasses_with_descriptions %\u0026gt;% filter(is.na(desc)) %\u0026gt;% knitr::kable()   dept code school units quarter code_numeric title desc    LAWGEN 116N Law School 3 1 116 NA NA  PHYSICS 41A School Of Humanities \u0026amp; Sciences 1 2 41 NA NA  THINK 52 Office Of Vice Provost For Undergraduate Education 4 2 52 NA NA  CS 41 School Of Engineering 2 6 41 NA NA  CS 193X School Of Engineering 3 6 193 NA NA  ECON 5 School Of Humanities \u0026amp; Sciences 1 11 5 NA NA    Most of these are classes I took a while ago, and most are for few units, so excluding these from analysis of descriptions shouldn’t be a big deal!\n Analysing Course Descriptions Now we get to the fun part! The code in this section is adapted from this awesome blog post by Juan Orduz analyzing tweet data.\nLet’s start with something easy and classic, a wordcloud! For this we can use the packages tidytext to help with counting words, and wordcloud for visualization.\nclasses_with_descriptions %\u0026gt;% unnest_tokens(word, desc) %\u0026gt;% anti_join(get_stopwords()) %\u0026gt;% mutate(word = str_extract(word, \u0026quot;[:alpha:]+\u0026quot;)) %\u0026gt;% count(word) %\u0026gt;% arrange(desc(n)) %\u0026gt;% with( wordcloud( word, n, min.freq = 5, random.order = FALSE, colors = brewer.pal(8, \u0026#39;Dark2\u0026#39;) ) ) ## Joining, by = \u0026quot;word\u0026quot; No surprises here! But it’s still fun to see my degree described in pretty colored words.\nWhat is perhaps most interesting to me is whether we can see relationships between topics in the course descriptions! For this, I used the igraph package to create a graph, and the networkD3 package for visualization with D3.\nFirst we use tidytext to count the bigrams, the pairs of words that occur next to each other, in the descriptions.\nword_bigrams \u0026lt;- classes_with_descriptions %\u0026gt;% unnest_tokens( input = desc, output = bigram, token = \u0026#39;ngrams\u0026#39;, n = 2 ) %\u0026gt;% filter(!is.na(bigram)) %\u0026gt;% separate(col = bigram, into = c(\u0026#39;word1\u0026#39;, \u0026#39;word2\u0026#39;), sep = \u0026#39; \u0026#39;) %\u0026gt;% select(word1, word2) bigram_count \u0026lt;- word_bigrams %\u0026gt;% count(word1, word2, sort = TRUE) Now we can create a graph object and use the base R (gasp) plot function to visualize the relationships between words. We use a threshold to include only bigrams that occur more times than the threshold. It turns out that 2 is a good threshold for this dataset.\nthreshold \u0026lt;- 2 network \u0026lt;- bigram_count %\u0026gt;% filter(n \u0026gt; threshold) %\u0026gt;% graph_from_data_frame(directed = FALSE) plot( network, vertex.size = 1, vertex.label.color = \u0026#39;black\u0026#39;, vertex.label.cex = 0.7, vertex.label.dist = 1, edge.color = \u0026#39;gray\u0026#39;, main = \u0026#39;Course Descriptions\u0026#39;, alpha = 50 ) Even restricting the graph to bigrams that occur at least 3 times, it’s still hard to really see the relationships here. Now’s when we use D3 to take this visualization to the next level. Since there’s so much more interaction possible with a D3 graph, we’ll lower the threshold to see a little more detail.\nthreshold \u0026lt;- 1 network \u0026lt;- bigram_count %\u0026gt;% filter(n \u0026gt; threshold) %\u0026gt;% graph_from_data_frame(directed = FALSE) network_D3 \u0026lt;- igraph_to_networkD3(network) network_D3$nodes \u0026lt;- network_D3$nodes %\u0026gt;% mutate( degree = 10 * degree(network), group = 1 ) network_D3$links \u0026lt;- network_D3$links %\u0026gt;% mutate(width = 10 * E(network)$n / max(E(network)$n)) forceNetwork( Links = network_D3$links, Nodes = network_D3$nodes, Source = \u0026#39;source\u0026#39;, Target = \u0026#39;target\u0026#39;, NodeID = \u0026#39;name\u0026#39;, Group = \u0026#39;group\u0026#39;, opacity = 0.9, Value = \u0026#39;width\u0026#39;, Nodesize = \u0026#39;degree\u0026#39;, linkWidth = JS(\u0026quot;function(d) { return Math.sqrt(d.value); }\u0026quot;), fontSize = 12, zoom = TRUE, opacityNoHover = 1 )  {\"x\":{\"links\":{\"source\":[58,81,2,5,25,11,36,2,10,0,3,8,17,36,20,0,20,1,20,36,28,21,2,38,13,6,11,50,84,7,33,36,28,67,1,29,1,1,102,2,2,1,36,4,7,5,12,1,2,1,0,2,35,106,11,2,14,28,28,1,5,1,1,54,83,36,1,11,5,48,0,57,36,1,36,19,2,20,2,1,1,36,1,16,36,12,4,46,2,11,66,20,1,33,1,1,108,20,7,32,2,0,2,7,20,1,2,91,2,20,115,1,110,38,36,26,26,1,30,1,89,2,1,8,5,60,90,0,111,82,72,48,2,36,20,18,66,98,13,112,1,2,2,2,1,36,2,17,14,55,36,1,2,0,2,18,95,20,77,23,17,2,20,31,15,7,38,1,10,51,25,28,2,26,20,23,11,18,15,0,5,1,93,2,20,39,0,1,11,3,7,93,61,34,98,51,17,7,5,38,13,40,42,115,93],\"target\":[133,141,38,38,38,38,39,22,118,138,13,13,40,41,41,42,42,42,43,44,44,44,45,47,47,47,14,117,117,117,49,49,50,136,145,122,51,146,146,24,24,52,52,15,15,15,16,147,17,17,53,53,159,157,150,55,56,121,137,59,8,18,18,132,132,60,25,25,25,61,62,63,63,64,64,65,27,28,28,68,29,69,69,70,70,70,71,126,72,73,73,30,74,75,75,9,158,31,31,76,76,78,78,79,80,10,10,152,32,164,166,82,160,124,85,86,135,87,87,148,143,88,149,11,11,91,144,139,162,142,92,92,119,93,94,134,95,156,96,163,97,97,99,125,100,161,101,101,103,103,104,104,105,34,120,107,155,165,140,127,130,108,108,35,35,35,109,109,128,128,36,36,36,36,36,36,36,36,36,36,36,36,153,19,112,113,4,4,151,20,12,114,114,123,123,129,131,37,21,115,115,115,115,116,154],\"value\":[10,9.09090909090909,8.18181818181818,8.18181818181818,8.18181818181818,7.27272727272727,5.45454545454545,5.45454545454545,4.54545454545455,4.54545454545455,4.54545454545455,4.54545454545455,4.54545454545455,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,3.63636363636364,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,2.72727272727273,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182,1.81818181818182],\"colour},\"nodes\":{\"name\":[\"in\",\"of\",\"and\",\"introduction\",\"this\",\"is\",\"such\",\"will\",\"emphasis\",\"laws\",\"linear\",\"on\",\"topics\",\"an\",\"based\",\"course\",\"covered\",\"data\",\"engineering\",\"theory\",\"to\",\"what\",\"abstraction\",\"at\",\"concepts\",\"focus\",\"for\",\"historical\",\"how\",\"image\",\"interest\",\"learn\",\"machine\",\"programming\",\"several\",\"students\",\"the\",\"we\",\"a\",\"about\",\"analysis\",\"answers\",\"applications\",\"approaches\",\"are\",\"art\",\"artificial\",\"as\",\"by\",\"c\",\"can\",\"computer\",\"context\",\"demonstrations\",\"differential\",\"discussion\",\"discussions\",\"drawn\",\"ee\",\"elements\",\"first\",\"fostered\",\"freedom\",\"from\",\"future\",\"graph\",\"group\",\"health\",\"ideas\",\"implications\",\"include\",\"initiative\",\"interaction\",\"interactive\",\"knowledge\",\"language\",\"learning\",\"least\",\"lecture\",\"lectures\",\"limited\",\"math\",\"mathematics\",\"maxwell's\",\"may\",\"modeling\",\"models\",\"mutual\",\"networks\",\"neural\",\"object\",\"order\",\"peer\",\"physical\",\"preference\",\"problem\",\"provides\",\"race\",\"random\",\"reading\",\"role\",\"science\",\"scientific\",\"sections\",\"seeds\",\"sets\",\"skills\",\"software\",\"student\",\"subject\",\"symmetric\",\"their\",\"these\",\"thinking\",\"understanding\",\"with\",\"working\",\"be\",\"algebra\",\"performance\",\"social\",\"do\",\"classification\",\"variables\",\"matrix\",\"research\",\"intelligence\",\"stanford\",\"systems\",\"vision\",\"structures\",\"visualization\",\"equations\",\"103\",\"principles\",\"more\",\"care\",\"does\",\"america\",\"our\",\"squares\",\"104\",\"particularly\",\"network\",\"oriented\",\"change\",\"computing\",\"cs106a\",\"nature\",\"objects\",\"developing\",\"time\",\"logic\",\"theories\",\"world\",\"solving\",\"processes\",\"developed\",\"leaders\",\"develop\",\"matrices\",\"same\",\"own\",\"questions\",\"make\",\"sophomores\",\"mathematical\"],\"group\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"nodesize\":[90,290,260,20,40,70,10,70,30,10,40,90,30,50,30,50,20,60,50,20,140,20,10,20,20,50,30,10,70,20,20,30,20,20,20,40,260,10,80,20,20,20,40,10,30,10,10,30,20,20,20,30,20,20,10,20,10,10,10,10,20,20,10,20,20,10,20,10,10,20,30,10,20,20,10,20,20,10,20,10,10,10,20,10,10,10,10,20,10,10,10,20,20,40,10,20,10,20,20,10,10,20,10,20,20,10,10,10,30,20,10,10,20,10,20,60,10,30,10,10,10,10,10,20,10,10,10,10,20,10,10,10,20,10,10,10,10,10,10,10,10,10,10,10,10,10,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]},\"options\":{\"NodeID\":\"name\",\"Group\":\"group\",\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20);\",\"fontSize\":12,\"fontFamily\":\"serif\",\"clickTextSize\":30,\"linkDistance\":50,\"linkWidth\":\"function(d) { return Math.sqrt(d.value); }\",\"charge\":-30,\"opacity\":0.9,\"zoom\":true,\"legend\":false,\"arrows\":false,\"nodesize\":true,\"radiusCalculation\":\" Math.sqrt(d.nodesize)+6\",\"bounded\":false,\"opacityNoHover\":1,\"clickAction\":null}},\"evals\":[],\"jsHooks\":[]} It’s so much fun to play around with the D3 graph visualization. Hover over nodes to read the labels more clearly. Unsurprisingly, the words cluster around the three nodes: “and”, “the” and “of”, which makes it more difficult to see relationships between domain terms. It’s fun to look at the bigrams that aren’t part of the main connected component, like “machine learning”, “maxwell’s differential equations”, “health care” and “neural networks”. Again, not surprising but kind of cute.\n ","date":1551312000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551312000,"objectID":"55db57bede7cc999f714cd6f50f4bd11","permalink":"/post/2019-02-28-visualizing-course-descriptions/","publishdate":"2019-02-28T00:00:00Z","relpermalink":"/post/2019-02-28-visualizing-course-descriptions/","section":"post","summary":"As my senior year at Stanford nears the end, I’ve started to think more and more about what I’ve really learned here, and what I’ll be taking away from my undergraduate experience. Sure, there’s plenty of sappy stuff about coming of age and figuring out what I want to start doing with my life (spoiler: haven’t figured it out), but what about concrete knowledge I’ve gained from my classes.","tags":["R","data-visualization","text-analysis","D3","tidyverse"],"title":"Visualizing Course Descriptions","type":"post"},{"authors":null,"categories":null,"content":"Background\nSimVascular is an open-source software project partly based in the Stanford Cardiovascular Biomechanics Computation Lab, where I spent the Summer of 2018 with support from the Stanford Bioengineering REU program. SimVascular enables segmentation of medical image data to develop 3-dimensional cardiovascular models, which can then be used for patient-specific simulation and analysis of bloodflow.\nOverview\nMy summer project involved developing a GUI plug-in for the software that would allow researchers to rapidly prototype and run simulations on lumped parameter models of the cardiovascular system. Lumped parameter modelling uses electrical circuit diagrams as an analogy to the cardiovascular system, allowing analysis of fundamental quantities such as pressure and flow. These models are often used in early stages of model development, as the simulations are relatively computationally inexpensive. They are also often used to provide boundary conditions to more complex, 3-D models.\nMotivation\nUnder the current architecture, researchers had to manually derive the ODEs that governed their LPN models, and write custom simulation code. This was extremely tedious for large models. In order to use lumped parameter models as boundary conditions, researchers needed to edit FORTRAN code. My goal was to streamline this process by designing a simple drag-and-drop graphical user interface within SimVascular. This interface allows researchers to quickly and easily design models, run simulations, and visualize the results all within the easy-to-use plug-in.\nExecution\nThe simulator plug-in is written in C++ with Qt for easy integration into the existing SimVascular architecture. Promising future directions involve specialization of the simulator for cardiovascular modelling by including large components such as a Windkessel model or even a \u0026ldquo;heart model\u0026rdquo;, which are composed of multiple traditional electrical components.\n","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"af2721847a53710fddd7ffe75386e508","permalink":"/project/simvascular/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/simvascular/","section":"project","summary":"A plug-in widget for fast and easy lumped parameter modelling of the cardiovascular system in SimVascular.","tags":["cbcl","cardiovascular","software","simulation"],"title":"A SimVascular Plug-in","type":"project"},{"authors":null,"categories":null,"content":"LiCoRICE is an open-source, realtime computation platform specialized for systems neuroscience experimentation. It has been developed in the Brain Interfacing Lab is now the system used to run the group\u0026rsquo;s closed-loop brain interface experiments. The platform is written in C and Python, and is specifically designed with a modular architecture to allow easy prototyping of models by experimenters using only Python.\nI joined the LiCoRICE project in the Summer of 2017. My role has been focused on specializing the platform for systems neuroscience, which has included:\n Testing and implementing graphics (using Pygame) and USB joystick input to the system Developing a realistic systems neuroscience simulation experiment. This includes writing LiCoRICE modules to generate synthetic neural activity from joystick movement input and to decode this synthetic neural data using a pre-trained Kalman filter with steady state gain. Organizing, executing and collecting data from a human trial of the simulation with 7 human participants Analysis of the experimental data and comparison to previous findings to validate the system Contribution to the conference paper published in LCTES\u0026rsquo; 18, and more significantly to a second publication currently in progress, focusing on the systems neuroscience applications of the system.  ","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"7d9d68cbd79ca14c3b0d23aa0c43ad61","permalink":"/project/licorice/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/licorice/","section":"project","summary":"An open-source realtime computation platform for sytems neuroscience experimentation","tags":["licorice","software","neuroscience","realtime"],"title":"LiCoRICE","type":"project"},{"authors":null,"categories":null,"content":"Students in Data Challenge Lab, the data science intensive course taught by Bill Behrman and Hadley Wickham, pursue a quarter-long data exploration and analysis project of their choice using the Tidyverse R skills they learn in the course. My project explored the dataset released by the Stanford Education Data Archive along with the publication The Geography of Racial/Ethic Test Score Gaps, (Reardon, Kalogrides and Shores, 2017). Using a number of creative data visualization techniques, including some inspired by the New York Times interactive based on the paper, I was able to explore the education achievement gap between students of different races and with parents of different income and education levels geographically, by subject and by student age.\nI am unable to share any results or code in accordance with the class policy and the Stanford Honor Code.\n","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"c22a8b467246e223efa12c59f8765cae","permalink":"/project/race-educ/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/race-educ/","section":"project","summary":"Exploring disparities between educational outcomes across socioeconomic and racial divides in the United States with data.","tags":["data-science","eda","rstats","education"],"title":"Race, Wealth and Education in America","type":"project"},{"authors":null,"categories":null,"content":"In the Fall of 2018, I worked with the researchers at the Stanford Open Policing Project (OPP) in the Stanford Computational Policy Lab, to implement and run the Veil of Darkness Test, as proposed by Grogger \u0026amp; Ridgeway in 2006 using the large OPP dataset. The premise of the test is that the race of a driver is less visible to the police when it is dark outside than when it is light. Therefore, in the presence of racial bias, there should be a greater disparity in the racial breakdown of drivers stopped during daylight hours than at night. There are a number of factors to control for, most critically time of day, location of the stop.\nMy responsibilities included:\n Finding states and cities for which the data had the necessary covariates for the test, e.g. driver race and stop location Developing raw data visualizations to provide context and intuition for regression models Implementing the test in R for a large dataset aggregated across cities and states Analysing the results of the visualizations and regression models and drawing conclusions about the existence of racial bias and the statistical strengths and limitations of the method  ","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"c09d41aeb416ace6ede28d4f13dd0ac5","permalink":"/project/opp/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/opp/","section":"project","summary":"Identifying racial bias in police traffic stop patterns across the United States.","tags":["rstats","statistics","data-science","data","bias","opp"],"title":"The Stanford Open Policing Project","type":"project"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536476400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536476400,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00-07:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":["Pavan Mehrotra*","Sabar Dasgupta*","Samantha Robertson","Paul Nuyujukian"],"categories":null,"content":"","date":1523775600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523775600,"objectID":"d0e261070d317dc32b385019c3562491","permalink":"/publication/licorice-one/","publishdate":"2018-04-15T00:00:00-07:00","relpermalink":"/publication/licorice-one/","section":"publication","summary":"Systems neuroscience studies involving in-vivo models often require realtime data processing. In these studies, many events must be monitored and processed quickly, including behavior of the subject (e.g., movement of a limb) or features of neural data (e.g., a neuron transmitting an action potential). Unfortunately, most realtime platforms are proprietary, require specific architectures, or are limited to low-level programming languages. Here we present a hardware-independent, open-source realtime computation platform that supports high-level programming. The resulting platform, LiCoRICE, can process on order 10e10 bits/sec of network data at 1 ms ticks with 18.2 µs jitter. It connects to various inputs and outputs (e.g., DIO, Ethernet, database logging, and analog line in/out) and minimizes reliance on custom device drivers by leveraging peripheral support via the Linux kernel. Its modular architecture supports model-based design for rapid prototyping with C and Python/Cython and can perform numerical operations via BLAS/LAPACKoptimized NumPy that is statically compiled via Numba’s pycc. LiCoRICE is not only suitable for systems neuroscience research, but also for applications requiring closed-loop realtime data processing from robotics and control systems to interactive applications and quantitative financial trading.","tags":["licorice","neuroscience","software","realtime"],"title":"An Open-Source Realtime Computation Platform","type":"publication"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.\n  Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483257600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483257600,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00-08:00","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]