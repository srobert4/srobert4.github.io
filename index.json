[{"authors":["admin"],"categories":null,"content":"I am a fourth-year undergraduate student at Stanford University, majoring Mathematical and Computational Science. I am broadly interested in applications of data science to human-centered problems, which has led me to research positions involving software development and statistical analysis in the Stanford Brain Interfacing Lab, the Stanford Cardiovascular Biomechanics Computation Lab, and most recently the Stanford Computational Policy Lab. Following my graduation in June 2019, I will continue exploring similar research as I pursue my Ph.D. In my free time, you might find me reading or writing fiction and non-fiction, preferably on a beach in my native Australia.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"I am a fourth-year undergraduate student at Stanford University, majoring Mathematical and Computational Science. I am broadly interested in applications of data science to human-centered problems, which has led me to research positions involving software development and statistical analysis in the Stanford Brain Interfacing Lab, the Stanford Cardiovascular Biomechanics Computation Lab, and most recently the Stanford Computational Policy Lab. Following my graduation in June 2019, I will continue exploring similar research as I pursue my Ph.","tags":null,"title":"Samantha Robertson","type":"author"},{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536476400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536476400,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00-07:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Background\nSimVascular is an open-source software project partly based in the Stanford Cardiovascular Biomechanics Computation Lab, where I spent the Summer of 2018 with support from the Stanford Bioengineering REU program. SimVascular enables segmentation of medical image data to develop 3-dimensional cardiovascular models, which can then be used for patient-specific simulation and analysis of bloodflow.\nOverview\nMy summer project involved developing a GUI plug-in for the software that would allow researchers to rapidly prototype and run simulations on lumped parameter models of the cardiovascular system. Lumped parameter modelling uses electrical circuit diagrams as an analogy to the cardiovascular system, allowing analysis of fundamental quantities such as pressure and flow. These models are often used in early stages of model development, as the simulations are relatively computationally inexpensive. They are also often used to provide boundary conditions to more complex, 3-D models.\nMotivation\nUnder the current architecture, researchers had to manually derive the ODEs that governed their LPN models, and write custom simulation code. This was extremely tedious for large models. In order to use lumped parameter models as boundary conditions, researchers needed to edit FORTRAN code. My goal was to streamline this process by designing a simple drag-and-drop graphical user interface within SimVascular. This interface allows researchers to quickly and easily design models, run simulations, and visualize the results all within the easy-to-use plug-in.\nExecution\nThe simulator plug-in is written in C++ with Qt for easy integration into the existing SimVascular architecture. Promising future directions involve specialization of the simulator for cardiovascular modelling by including large components such as a Windkessel model or even a \u0026ldquo;heart model\u0026rdquo;, which are composed of multiple traditional electrical components.\n","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"af2721847a53710fddd7ffe75386e508","permalink":"/project/simvascular/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/simvascular/","section":"project","summary":"A plug-in widget for fast and easy lumped parameter modelling of the cardiovascular system in SimVascular.","tags":["cbcl","cardiovascular","software","simulation"],"title":"A SimVascular Plug-in","type":"project"},{"authors":null,"categories":null,"content":"LiCoRICE is an open-source, realtime computation platform specialized for systems neuroscience experimentation. It has been developed in the Brain Interfacing Lab is now the system used to run the group\u0026rsquo;s closed-loop brain interface experiments. The platform is written in C and Python, and is specifically designed with a modular architecture to allow easy prototyping of models by experimenters using only Python.\nI joined the LiCoRICE project in the Summer of 2017. My role has been focused on specializing the platform for systems neuroscience, which has included:\n Testing and implementing graphics (using Pygame) and USB joystick input to the system Developing a realistic systems neuroscience simulation experiment. This includes writing LiCoRICE modules to generate synthetic neural activity from joystick movement input and to decode this synthetic neural data using a pre-trained Kalman filter with steady state gain. Organizing, executing and collecting data from a human trial of the simulation with 7 human participants Analysis of the experimental data and comparison to previous findings to validate the system Contribution to the conference paper published in LCTES\u0026rsquo; 18, and more significantly to a second publication currently in progress, focusing on the systems neuroscience applications of the system.  ","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"7d9d68cbd79ca14c3b0d23aa0c43ad61","permalink":"/project/licorice/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/licorice/","section":"project","summary":"An open-source realtime computation platform for sytems neuroscience experimentation","tags":["licorice","software","neuroscience","realtime"],"title":"LiCoRICE","type":"project"},{"authors":null,"categories":null,"content":"Students in Data Challenge Lab, the data science intensive course taught by Bill Behrman and Hadley Wickham, pursue a quarter-long data exploration and analysis project of their choice using the Tidyverse R skills they learn in the course. My project explored the dataset released by the Stanford Education Data Archive along with the publication The Geography of Racial/Ethic Test Score Gaps, (Reardon, Kalogrides and Shores, 2017). Using a number of creative data visualization techniques, including some inspired by the New York Times interactive based on the paper, I was able to explore the education achievement gap between students of different races and with parents of different income and education levels geographically, by subject and by student age.\nI am unable to share any results or code in accordance with the class policy and the Stanford Honor Code.\n","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"c22a8b467246e223efa12c59f8765cae","permalink":"/project/race-educ/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/race-educ/","section":"project","summary":"Exploring disparities between educational outcomes across socioeconomic and racial divides in the United States with data.","tags":["data-science","eda","rstats","education"],"title":"Race, Wealth and Education in America","type":"project"},{"authors":null,"categories":null,"content":"In the Fall of 2018, I worked with the researchers at the Stanford Open Policing Project (OPP) in the Stanford Computational Policy Lab, to implement and run the Veil of Darkness Test, as proposed by Grogger \u0026amp; Ridgeway in 2006 using the large OPP dataset. The premise of the test is that the race of a driver is less visible to the police when it is dark outside than when it is light. Therefore, in the presence of racial bias, there should be a greater disparity in the racial breakdown of drivers stopped during daylight hours than at night. There are a number of factors to control for, most critically time of day, location of the stop.\nMy responsibilities included:\n Finding states and cities for which the data had the necessary covariates for the test, e.g. driver race and stop location Developing raw data visualizations to provide context and intuition for regression models Implementing the test in R for a large dataset aggregated across cities and states Analysing the results of the visualizations and regression models and drawing conclusions about the existence of racial bias and the statistical strengths and limitations of the method  ","date":1550217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550217600,"objectID":"c09d41aeb416ace6ede28d4f13dd0ac5","permalink":"/project/opp/","publishdate":"2019-02-15T00:00:00-08:00","relpermalink":"/project/opp/","section":"project","summary":"Identifying racial bias in police traffic stop patterns across the United States.","tags":["rstats","statistics","data-science","data","bias","opp"],"title":"The Stanford Open Policing Project","type":"project"},{"authors":["Samantha Robertson"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536476400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536476400,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00-07:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":["Pavan Mehrotra*","Sabar Dasgupta*","Samantha Robertson","Paul Nuyujukian"],"categories":null,"content":"","date":1523775600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523775600,"objectID":"d0e261070d317dc32b385019c3562491","permalink":"/publication/licorice-one/","publishdate":"2018-04-15T00:00:00-07:00","relpermalink":"/publication/licorice-one/","section":"publication","summary":"Systems neuroscience studies involving in-vivo models often require realtime data processing. In these studies, many events must be monitored and processed quickly, including behavior of the subject (e.g., movement of a limb) or features of neural data (e.g., a neuron transmitting an action potential). Unfortunately, most realtime platforms are proprietary, require specific architectures, or are limited to low-level programming languages. Here we present a hardware-independent, open-source realtime computation platform that supports high-level programming. The resulting platform, LiCoRICE, can process on order 10e10 bits/sec of network data at 1 ms ticks with 18.2 µs jitter. It connects to various inputs and outputs (e.g., DIO, Ethernet, database logging, and analog line in/out) and minimizes reliance on custom device drivers by leveraging peripheral support via the Linux kernel. Its modular architecture supports model-based design for rapid prototyping with C and Python/Cython and can perform numerical operations via BLAS/LAPACKoptimized NumPy that is statically compiled via Numba’s pycc. LiCoRICE is not only suitable for systems neuroscience research, but also for applications requiring closed-loop realtime data processing from robotics and control systems to interactive applications and quantitative financial trading.","tags":["licorice","neuroscience","software","realtime"],"title":"An Open-Source Realtime Computation Platform","type":"publication"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.\n  Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483257600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483257600,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00-08:00","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Samantha Robertson"],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you\u0026rsquo;ll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461135600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515830400,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00-07:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]